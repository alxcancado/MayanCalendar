<!doctype html>
<html lang="en">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Mayan Calendar</title>

    <!-- bootstrap css files -->
    <link href="lib/bootstrap/css/bootstrap.min.css" rel="stylesheet" media="screen">
    <link href="lib/jquery-ui-1.9.2.custom/css/smoothness/jquery-ui-1.9.2.custom.css" rel="stylesheet">
    <link href="lib/jquery-bootstrap-slider/css/bootstrap-slider.css" rel="stylesheet">

</head>

<body>

    <div class="container">
        <h1>Mayan Calendar</h2>
        <div class="well">
            <div id="slider"></div>
        </div>
        <div class="well navbar-fixed-bottom" style="text-align:center">
            <canvas id="stela" width="0" height="0"></canvas>
        </div>
    </div>

    <!-- requestAnimationFrame shim -->
    <script src="lib/requestAnimationFrame.js"></script>

    <!-- calendar conversion tool -->
    <script src="lib/fourmilab/astro.js"></script>
    <script src="lib/fourmilab/calendar.js"></script>

    <!-- Mayan calendar code -->
    <script src="mayan/calendar.js"></script>
    <script src="mayan/glyphs.js"></script>
    <script src="mayan/stela.js"></script>
    <script src="mayan/counter.js"></script>
    <script src="mayan/renderer.js"></script>
    <script src="mayan/tests.js"></script>

    <!-- user interface components -->
    <script src="lib/jquery-1.8.3.min.js"></script>
    <script src="lib/jquery-bootstrap-slider/js/jquery-ui.min.js"></script>
    <script src="lib/bootstrap/js/bootstrap.js"></script>

    <!-- startup script -->
    <script>

        $(function(){

            // Create Mayan calendar and pass it a canvas object
            var renderer = new Mayan.Renderer(document.getElementById('stela'));

            // Update the calendar with a count (number of days since Mayan creation date)
            var updateCount = function(count) {

                // Update target date for transitioning
                renderer.targetCal.setFromCount(count);

                // Update slider tooltip
                var text = mayan_days_to_gregorian_str(count);
                sliderTooltip.options.title = text;
                refreshTooltip(sliderTooltip);
            };

            // Create an initial Mayan count representing today's date
            var initialCount = gregorian_to_mayan_days.apply(null, todaysdate());

            // Initialize the slider
            $('#slider').slider({
                min:0,
                max:2880000,
                step:1,
                slide: function(evt,ui) { updateCount(ui.value); },
                change: function(evt,ui) { updateCount(ui.value); },
                value: initialCount,
            });

            // Initialize the slider tooltip
            var sliderHandle = $('#slider .ui-slider-handle');
            sliderHandle.tooltip({title:' ',trigger:"manual",placement:"bottom"});
            sliderHandle.tooltip("show");
            var sliderTooltip = sliderHandle.data('tooltip');

            // Set the initial date
            updateCount(initialCount);

            // Load all the glyph images and start animation when done
            Mayan.loadGlyphs(function() {
                renderer.stela.updateCanvasSize();
                requestAnimationFrame(function(){renderer.render();});
            });
        });
    </script>

    <!-- misc utility scripts -->
    <script>
        // zero-padding from: 
        // http://stackoverflow.com/questions/1267283/how-can-i-create-a-zerofilled-value-using-javascript
        function paddy(n, p, c) {
            var pad_char = typeof c !== 'undefined' ? c : '0';
            var pad = new Array(1 + p).join(pad_char);
            return (pad + n).slice(-pad.length);
        }

        // get current date from:
        // http://stackoverflow.com/questions/1531093/how-to-get-current-date-in-javascript
        function todaysdate() {
            var today = new Date();
            var day = today.getDate();
            var month = today.getMonth()+1; //January is 0!
            var year = today.getFullYear();
            return [year,month,day];
        }

        // extra date conversion functions

        function mayan_days_to_gregorian(count) {
            return jd_to_gregorian(MAYAN_COUNT_EPOCH + count);
        }

        function gregorian_to_mayan_days(year, month, day) {
            return gregorian_to_jd(year,month,day) - MAYAN_COUNT_EPOCH;
        }

        var mayan_days_to_gregorian_str = function(count) {
            var greg = mayan_days_to_gregorian(count);
            var year = greg[0];
            var month = greg[1];
            var day = greg[2];

            var dayStr = paddy(day,2);

            var yearStr = "";
            if (year <= 0) {
                year = -year+1;
                yearStr += " BC";
            }
            else {
                yearStr += " AD";
            }
            yearStr = paddy(year,4) + yearStr;

            var monthStr = [
                "", "Jan", "Feb", "Mar", "Apr", "May","Jun",
                "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ][month];

            return monthStr + " " + dayStr + ", " + yearStr;
        };

        // custom function to refresh a Bootstrap Tooltip (in case its anchor has moved)
        // (I copied the Tooltip.prototype.show method for the important bits)
        var refreshTooltip = function(t) {
            var $tip = t.tip();
            $tip.find('.tooltip-inner')[t.options.html ? 'html' : 'text'](t.getTitle());

            var placement = typeof t.options.placement == 'function' ?
                t.options.placement.call(t, $tip[0], t.$element[0]) :
                t.options.placement;
            var inside = /in/.test(placement);
            var pos = t.getPosition(inside);

            actualWidth = $tip[0].offsetWidth;
            actualHeight = $tip[0].offsetHeight;

            switch (inside ? placement.split(' ')[1] : placement) {
                case 'bottom':
                    tp = {top: pos.top + pos.height, left: pos.left + pos.width / 2 - actualWidth / 2};
                    break;
                case 'top':
                    tp = {top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2};
                    break;
                case 'left':
                    tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth};
                    break;
                case 'right':
                    tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width};
                    break;
            }

            $tip.offset(tp);
        };

    </script>

</body>
</html>
